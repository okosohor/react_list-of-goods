{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","this","visibleGoods","sort","g1","g2","localeCompare","length","className","onClick","type","cn","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,iGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MACjB,CAAEC,YAAaD,EAAMC,gBAhB3B,EAoBES,MAAQ,WACN,EAAKL,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KArBzD,4CAwBE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAAY,UAAOd,GAEzB,OAAQI,GACN,KAAKL,EAASS,SACZM,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAChBD,EAAGE,cAAcD,MAEnB,MAEF,KAAKlB,EAASW,OACZI,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAChBD,EAAGG,OAASF,EAAGE,UAarB,OAJIN,KAAKX,MAAMC,YACbW,EAAaH,UAIb,sBAAKS,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASR,KAAKP,eACdgB,KAAK,SACLF,UAAWG,IAAG,SAAU,UACtB,CAAE,WAAYnB,IAAaL,EAASS,WAJxC,iCASA,wBACEa,QAASR,KAAKJ,aACda,KAAK,SACLF,UAAWG,IAAG,SAAU,aACtB,CAAE,WAAYnB,IAAaL,EAASW,SAJxC,4BASA,wBACEW,QAASR,KAAKF,QACdW,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CAAE,YAAapB,IAHvD,sBAQEA,GAAcC,IAAaL,EAASM,OACpC,wBACEgB,QAASR,KAAKD,MACdU,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACE,6BACGN,EAAaU,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBA7FvB,GAAyBC,IAAMC,WC1B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.da39e52a.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => (\n      { isReversed: !state.isReversed }\n    ));\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = [...goodsFromServer];\n\n    switch (sortType) {\n      case SortType.ALPHABET:\n        visibleGoods.sort((g1, g2) => (\n          g1.localeCompare(g2)\n        ));\n        break;\n\n      case SortType.LENGTH:\n        visibleGoods.sort((g1, g2) => (\n          g1.length - g2.length\n        ));\n\n        break;\n\n      default:\n        break;\n    }\n\n    if (this.state.isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={this.sortByAlphabet}\n            type=\"button\"\n            className={cn('button', 'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={this.sortByLength}\n            type=\"button\"\n            className={cn('button', 'is-success',\n              { 'is-light': sortType !== SortType.LENGTH })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={this.reverse}\n            type=\"button\"\n            className={cn('button', 'is-warning', { 'is-light': !isReversed })}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              onClick={this.reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}